import React from 'react';
import { Row, Col, Card, notification, Tag, Button, Steps, Collapse } from 'antd';
// import moment from 'moment';
import httpServer from '../../../axios/index';
import BreadcrumbCustom from '../../BreadcrumbCustom';
const Panel = Collapse.Panel;
const Step = Steps.Step;

export default class LeaveAudit extends React.Component {
    state = {
        list: [],
        auditObj:{},
    };
    componentDidMount(){
        this.fetchElderlyList();
    }
    fetchElderlyList(){
        const { customerId } = this.props.auth;
        httpServer.listElderlyInfo({customerId, launchFlag:1, listStatus:"3"}).then(res => {
            // console.log('leave list:',res);
            const list = res.data || [];
            this.setState({list, activeKey:list[0] && list[0].id.toString() });
            list.length>0 && this.fetchOneAudit(list[0].id);
        })
    }
    fetchOneAudit(elderlyId){
        const { customerId, tbDeptInfo } = this.props.auth;
        httpServer.outHomeAuditList({customerId, elderlyId }).then(res => {
            // console.log('one elderly audit info: ',res);
            if(res.code===200){
                let arr = [], tempArr = [];
                res.data && res.data.forEach(o => {
                    if(o.status) {
                        arr = [ o, ...arr];
                    }else {
                        if(o.deptId === tbDeptInfo.id.toString()){
                            arr = [ ...arr, o ];
                        }else {
                            tempArr.push(o);
                        }
                    }
                });
                this.setState({auditObj:{ ...this.state.auditObj, [elderlyId]:[...arr, ...tempArr ]}})
            } else {
                this.notice('error', res.msg);
            }
        })
    }
    notice(status, msg) {
        let text = status==='success' ? '成功' : (status === 'error'? '失败' : '');
        notification[status]({
            message: `${text}提示:`,
            description:msg,
            duration:2
        })
    }
    onCollapseChangeHandler = (key) => {
        const { auditObj } = this.state;
        this.setState({activeKey: key});
        key && (auditObj[key] || this.fetchOneAudit(key) );
    };
    onCheckOutHandler = (elderlyId, auditId) => {
        const { customerId, id } = this.props.auth;
        httpServer.outHomeAudit({customerId, elderlyId, optId:id, id:auditId}).then(res => {
            // console.log('check audit:',res);
            this.notice('info',res.msg);
            res.code === 200 && this.fetchOneAudit(elderlyId);
        })
    };
    render() {
        const { list, activeKey, auditObj } = this.state;
        const { auth } = this.props;
        return (
            <div>
                <BreadcrumbCustom first="审核管理" second="出院审核" />
                <Card title="待审核老人:">
                    {
                        list.length > 0 ?
                        <Collapse bordered={false} accordion activeKey={activeKey} onChange={this.onCollapseChangeHandler}>
                            {
                                list.map(item => (
                                    <Panel
                                        header={<div>
                                            <Tag color="#108ee9">{item.name}</Tag> -- {item.age}岁 -- {item.roomName}房间
                                            <span className="pull-right">出院申请日期:{item.requestTime}</span>
                                        </div>}
                                        key={item.id}
                                    >
                                        <p>出院流程进度：</p>
                                        <Steps direction="vertical" size="small">
                                            {
                                                auditObj[item.id] ? auditObj[item.id].map(s =>
                                                    <Step key={s.id}
                                                         description={s.status ? "审核完成"
                                                             : (s.deptId === auth.tbDeptInfo.id.toString() ?
                                                                 <div>审核中 ...
                                                                     <Button
                                                                         type="primary"
                                                                         size="small"
                                                                         onClick={() => this.onCheckOutHandler(item.id, s.id)}
                                                                     >确认审核</Button>
                                                                 </div>
                                                                 : "待审核")}
                                                         status={s.status ? "finish" : (s.deptId === auth.tbDeptInfo.id.toString() ? "process" : "wait")}
                                                         title={s.deptName}
                                                    />)
                                                    : null
                                            }
                                        </Steps>
                                    </Panel>
                                ))
                            }
                        </Collapse> : '无审核数据'
                    }
                </Card>
            </div>
        )
    }
}