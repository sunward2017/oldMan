import React , {Component , Fragment } from 'react';
import {Card,Input,Row,Col,Form,Button,notification,Table,Divider,Popconfirm} from 'antd';
import httpServer from '../../../axios';

class HealthCarePlan extends Component{
  constructor(props){
    super(props);
    this.state = {
      checkItemList:[],
      edit:false,
      iptText1:'',//次数
      iptText2:'',//描述
    };
    this.handleIptText1 = this.handleIptText1.bind(this);
    this.handleIptText2 = this.handleIptText2.bind(this);
  }

  componentDidMount(){
    this.getCheckItem();
  }
  getCheckItem(){
    const {customerId} = this.props;
    httpServer.listCheckItemChild({customerId,pid:2}).then((res)=>{
      if (res.code === 200) {
        res.data?this.setState({checkItemList:res.data}):this.setState({checkItemList:[]});
      } else {
        if(res.message ==='Request failed with status code 500'){
            console.log(res.message);
         }else{
             const args = {
            message: '通信失败',
            description: res.msg,
            duration: 2,
          };
          notification.error(args);
         }
      }
    }).catch((error)=>{
      console.log(error);
    });
  }

  handleModify(record){ // 编辑
    this.setState({edit:true});
  }
  handleClickCancle(){
    this.setState({edit:false});
  }
  handleIptText1(e) { //列表“次数”字段发生变化
    this.setState({iptText1:e.target.value});
  }
  handleIptText2(e) { //列表“描述”字段发生变化
    this.setState({iptText2:e.target.value});
  }

  render(){
    const {checkItemList,edit,iptText1,iptText2} = this.state;
    const columns = [{
      title: '序号',
      render:(text,record,index)=>`${index+1}`,
      key:'serialNumber',
      width:'5%'
    },{
      title: '检查项类别',
      dataIndex: 'checkTypeName',
      key: 'checkTypeName',
      width:'10%'
    },{
      title:'子类名称',
      dataIndex: 'checkItemName',
      key: 'checkItemName',
      width:'10%'
    },{
      title:'单位',
      dataIndex: 'unit',
      key: 'unit',
      width:'5%'
    },{
      title: '次数',
      dataIndex: 'times',
      key: 'times',
      render:(text,record)=>{
        return (
          edit?
            <Input 
              value={iptText1} 
              onChange={this.handleIptText1} 
            />:record.times
          )
      },
      width:'10%'
    },{
      title:'描述',
      dataIndex: 'serviceContent',
      key: 'serviceContent',
      render:(text,record)=>{
        return(
          edit?
          <Input 
            value={iptText2} 
            onChange={this.handleIptText2} 
          />:record.serviceContent
        ) 
      },
      width:'20%'
    },{
      title:'添加日期',
      dataIndex: 'addtime',
      key: 'addtime',
      width:'15%',
    },{
      title:'操作',
      dataIndex: 'action',
      key: 'action',
      render:(text,record)=>{
        return(
            edit?
              <span>
                <a href="javascript:;" onClick={() => { this.handleModify(record) }} style={{color:'#2ebc2e'}}>保存</a>
                  <Divider type="vertical" />
                  <Popconfirm title="确定取消?" onConfirm={() => this.handleClickCancle()}>
                    <a href="javascript:;" style={{color:'#2ebc2e'}}>取消</a>
                  </Popconfirm>
              </span>:
              <span>
                <a href="javascript:;" onClick={() => { this.handleModify(record) }} style={{color:'#2ebc2e'}}>编辑</a>
                  <Divider type="vertical" />
                  <Popconfirm title="确定删除?" onConfirm={() => this.handleRowDelete(record.id,record)}>
                    <a href="javascript:;" style={{color:'#2ebc2e'}}>删除</a>
                  </Popconfirm>
              </span>          
        )
      },
      width:'15%',
    }];
    return(
      <Fragment>
        <Table 
          bordered
          dataSource={checkItemList} 
          columns={columns} 
          pagination={{ showSizeChanger:true , showQuickJumper:true , pageSizeOptions:['10','20','30','40','50','100']}}
          rowKey={record => record.id}
        />
      </Fragment>
    )
  }
}

export default HealthCarePlan;