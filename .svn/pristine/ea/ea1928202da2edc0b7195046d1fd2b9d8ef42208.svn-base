import React,{Fragment} from 'react';
import { Card, Input,Modal ,Button, Form, Avatar, notification, Divider,Icon,Tag,InputNumber} from 'antd';
import httpServer from '@/axios';
import moment from 'moment';

const { Meta } = Card;

class changeNursingGrade extends React.Component {
    notice(status, msg) {
        let text = status==='success' ? '成功' : (status === 'error'? '失败' : '');
        notification[status]({
            message: `${text}提示:`,
            description:msg,
            duration:2
        })
    }
    cancel=()=>{
    	this.props.close();
    }
    handleOk=()=>{
    	this.props.form.validateFields((err, fieldsValue) => {
    		if(!err){
    		 let values ={
    		 	...this.props.elderlyInfo,
    		 	...fieldsValue,
    		 }
    		 delete values.tbBedInfo;
    		 
      	     httpServer.updateElderlyInfo(values).then((res)=>{
   	  	        if(res.code===200){
    	  		   this.notice('success','水电比例变更');
    	  		}else{
    	  			this.notice('error','水电比例变更')
    	  		}
    	  		this.props.close();
    	     })
    		}
    	})

    }
    render() {
        const { getFieldDecorator } = this.props.form;
        const {elderlyInfo} = this.props;
        const formItemLayout = {
	      labelCol: {
	        xs: { span: 24 },
	        sm: { span: 8 },
	      },
	      wrapperCol: {
	        xs: { span: 24 },
	        sm: { span: 16 },
	      },
	    };
        return ( 
        	<Modal
		        title="护理等级变更"
		        okText='提交'
		        width="40%"
		        visible={true}
		        onOk={this.handleOk}
		        onCancel={this.cancel}
		        maskClosable={false}
		      >
                <Card title="基础信息">
				    <Meta
				        avatar={<Avatar src="https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png" />}
				        title={elderlyInfo.name}
				        description={<span>性别:&emsp;<Tag color="#108ee9">{elderlyInfo.sex}</Tag>&emsp;年龄:&emsp;<Tag color="orange">{elderlyInfo.age}岁</Tag>&emsp;&emsp;联系人:&emsp;{elderlyInfo.age}</span>}
				    />
				</Card>
				<Divider orientation="left">变更记录</Divider>
				 <Form>
				    <Form.Item label="原水费比例" {...formItemLayout}>
				       {elderlyInfo.shareProportionWater+'%'}
				    </Form.Item>
				    <Form.Item label="原电费比例" {...formItemLayout}>
				       {elderlyInfo.shareProportionPower+'%'}
				    </Form.Item>
		            <Form.Item label="变更后水费比例" {...formItemLayout}>
		              {getFieldDecorator('shareProportionWater', {
		                rules: [{ required: true, message: '请输入新的水费承当比例' }],
		              })(
		                 <InputNumber
			              min={0}
					      max={100}
					      formatter={value => `${value}%`}
					      parser={value => value.replace('%', '')}
			            />  
		              )}
		            </Form.Item>
		            <Form.Item label="变更后电费比例" {...formItemLayout}>
		              {getFieldDecorator('shareProportionPower',{
		              	rules: [{ required: true, message: '请输入新的电费承当比例' }],
		              })(
		              	 <InputNumber
			              min={0}
					      max={100}
					      formatter={value => `${value}%`}
					      parser={value => value.replace('%', '')}
			            /> 
		              )}
		            </Form.Item>
		          </Form> 
            </Modal>    
        )
    }
}
export default Form.create()(changeNursingGrade)